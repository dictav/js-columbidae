{"version":3,"file":"bundle.js","sources":["../src/stackdriver.js","../src/sentry.js","../src/util.js","../src/main.js"],"sourcesContent":["var baseAPIUrl = \"https://clouderrorreporting.googleapis.com/v1beta1/projects/\";\n\nfunction genV8StackMessage(err) {\n  var message = err.stack.toString();\n  console.log(message);\n  return message;\n}\n\nfunction StackDriver(config) {\n  this.url = baseAPIUrl + config.projectId + \"/events:report?key=\" + config.key;\n  this.payload = {\n    serviceContext: {\n      // https://cloud.google.com/error-reporting/reference/rest/v1beta1/ServiceContext\n      // resourceType is set automatically for incoming errors and must not be set when reporting errors. \n      service: config.service,\n      version: config.version\n    },\n    context: {\n      httpRequest: {\n        userAgent: window.navigator.userAgent,\n        url: window.location.href,\n        referrer: document.referrer,\n\n      }\n    }\n  }\n}\n\nStackDriver.prototype.send = function(err) {\n  this.payload.message = genV8StackMessage(err);\n\n  if (navigator.sendBeacon) {\n    navigator.sendBeacon(this.url, JSON.stringify(this.payload))\n    return;\n  }\n\n  var xhr = new XMLHttpRequest();\n  xhr.open('POST', this.url, true);\n  xhr.send(JSON.stringify(this.payload));\n}\n\nexport default StackDriver;\n","var VERSION = '0.0.1'\nvar duration = 120// duration from start\n\nfunction Sentry(config) {\n  this.url = \"https://sentry.io/api/\" + config.projectId + \"/store/\"\n    + \"?sentry_version=7\"\n    + \"&sentry_client=simple-reporter%2F\" + VERSION\n    + \"&sentry_key=\" + config.key\n  this.payload = {\n    \"project\": config.projectId,\n    \"logger\": \"javascript\",\n    \"platform\": \"javascript\",\n    \"request\": {\n      \"headers\": {\n        \"User-Agent\": navigator.userAgent,\n      },\n      \"url\": window.location.href\n    },\n    \"exception\": {\n      \"values\": [\n        {\n          \"type\": \"Error\",\n          \"value\": 'initial message',\n          \"stacktrace\": {\n            \"frames\": [\n              {\n                \"filename\": \"http://dictav.net/js-simple-error-reporter/index.html\",\n                \"lineno\": 17,\n                \"colno\": 23,\n                \"function\": \"?\",\n                \"in_app\": true\n              },\n              {\n                \"filename\": \"http://dictav.net/js-simple-error-reporter//dist/bundle.js\",\n                \"lineno\": 4,\n                \"colno\": 587,\n                \"function\": \"Object.e.Crash\",\n                \"in_app\": true\n              }\n            ]\n          }\n        }\n      ]\n    },\n    \"extra\": {\n      \"session:duration\": 0\n    }\n  }\n}\n\nSentry.prototype.send = function(err) {\n  this.payload.exception.values[0].value = err.message;\n\n  if (navigator.sendBeacon) {\n    navigator.sendBeacon(this.url, JSON.stringify(this.payload))\n    return;\n  }\n\n  var xhr = new XMLHttpRequest();\n  xhr.open('POST', this.url, true);\n  xhr.send(JSON.stringify(this.payload));\n}\n\nexport default Sentry;\n","function hoge(str) {\n  return 'hoge' + str;\n}\n\nfunction piyo(str) {\n  return hoge(str) + 'piyo';\n}\n\nexport default function crash(str) {\n  throw new Error(piyo(str));\n}\n","import StackDriver from './stackdriver'\nimport Sentry from './sentry'\nimport crash from './util'\n\nfunction hello() {\n  /*@cc_on return false;@*/\n  throw new Error(\"Hello, My StackdriverJS!\");\n}\n\nexport function HelloStackDriver(config){\n  var sd = new StackDriver(config);\n  try {\n    throw new Error(\"Whats wrong!!!\");\n  } catch(err) {\n    sd.send(err);\n  }\n}\n\nexport function Crash(str) {\n  crash(str)\n}\n\nexport function HelloSentry(config){\n  var st = new Sentry(config);\n  try {\n    throw new Error(\"Whats wrong!\");\n  } catch(err) {\n    st.send(err);\n  }\n}\n"],"names":["genV8StackMessage","err","message","stack","toString","console","log","StackDriver","config","this","url","baseAPIUrl","projectId","key","payload","serviceContext","service","version","context","httpRequest","userAgent","window","navigator","location","href","referrer","document","Sentry","VERSION","project","logger","platform","request","headers","User-Agent","exception","values","type","value","stacktrace","frames","filename","lineno","colno","function","in_app","extra","session:duration","hoge","str","piyo","crash","Error","prototype","send","sendBeacon","JSON","stringify","xhr","XMLHttpRequest","open","sd","st"],"mappings":"6NAEA,SAASA,EAAkBC,GACzB,IAAIC,EAAUD,EAAIE,MAAMC,WAExB,OADAC,QAAQC,IAAIJ,GACLA,EAGT,SAASK,EAAYC,GACnBC,KAAKC,IAAMC,EAAaH,EAAOI,UAAY,sBAAwBJ,EAAOK,IAC1EJ,KAAKK,SACHC;;;AAGEC,QAASR,EAAOQ,QAChBC,QAAST,EAAOS,SAElBC,SACEC,aACEC,UAAWC,OAAOC,UAAUF,UAC5BV,IAAKW,OAAOE,SAASC,KACrBC,SAAUC,SAASD,YCpB3B,SAESE,EAAOnB,GACdC,KAAKC,IAAM,yBAA2BF,EAAOI,UAAY,4DAEfgB,EACtC,eAAiBpB,EAAOK,IAC5BJ,KAAKK,SACHe,QAAWrB,EAAOI,UAClBkB,OAAU,aACVC,SAAY,aACZC,SACEC,SACEC,aAAcZ,UAAUF,WAE1BV,IAAOW,OAAOE,SAASC,MAEzBW,WACEC,SAEIC,KAAQ,QACRC,MAAS,kBACTC,YACEC,SAEIC,SAAY,wDACZC,OAAU,GACVC,MAAS,GACTC,WAAY,IACZC,QAAU,IAGVJ,SAAY,6DACZC,OAAU,EACVC,MAAS,IACTC,WAAY,iBACZC,QAAU,QAOtBC,OACEC,mBAAoB,IC7C1B,SAASC,EAAKC,GACZ,MAAO,OAASA,EAGlB,SAASC,EAAKD,GACZ,OAAOD,EAAKC,GAAO,OAGrB,SAAwBE,EAAMF,GAC5B,MAAM,IAAIG,MAAMF,EAAKD,IFTvB,IAAItC,EAAa,+DA4BjBJ,EAAY8C,UAAUC,KAAO,SAASrD,GAGpC,GAFAQ,KAAKK,QAAQZ,QAAUF,EAAkBC,GAErCqB,UAAUiC,WACZjC,UAAUiC,WAAW9C,KAAKC,IAAK8C,KAAKC,UAAUhD,KAAKK,cADrD,CAKA,IAAI4C,EAAM,IAAIC,eACdD,EAAIE,KAAK,OAAQnD,KAAKC,KAAK,GAC3BgD,EAAIJ,KAAKE,KAAKC,UAAUhD,KAAKK,YCtC/B,IAAIc,EAAU,QAkDdD,EAAO0B,UAAUC,KAAO,SAASrD,GAG/B,GAFAQ,KAAKK,QAAQqB,UAAUC,OAAO,GAAGE,MAAQrC,EAAIC,QAEzCoB,UAAUiC,WACZjC,UAAUiC,WAAW9C,KAAKC,IAAK8C,KAAKC,UAAUhD,KAAKK,cADrD,CAKA,IAAI4C,EAAM,IAAIC,eACdD,EAAIE,KAAK,OAAQnD,KAAKC,KAAK,GAC3BgD,EAAIJ,KAAKE,KAAKC,UAAUhD,KAAKK,+BEnDxB,SAA0BN,GAC/B,IAAIqD,EAAK,IAAItD,EAAYC,GACzB,IACE,MAAM,IAAI4C,MAAM,kBAChB,MAAMnD,GACN4D,EAAGP,KAAKrD,aAIZ,SAAsBgD,GACpBE,EAAMF,kBAGR,SAA4BzC,GAC1B,IAAIsD,EAAK,IAAInC,EAAOnB,GACpB,IACE,MAAM,IAAI4C,MAAM,gBAChB,MAAMnD,GACN6D,EAAGR,KAAKrD"}